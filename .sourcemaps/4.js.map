{"version":3,"sources":["../../src/pages/tradepanel/tradepanel.ts","../../src/pages/tradepanel/tradepanel.module.ts","../../src/providers/insurelist.service.ts","../../src/config/environment.ts","../../src/pages/transaction-shared/insurelist.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { Component , OnInit} from '@angular/core';\r\nimport { NavController, IonicPage, NavParams } from 'ionic-angular';\r\nimport { SlicePipe } from '@angular/common';\r\nimport { AuthService } from '../../providers/auth.service';\r\nimport { InsurelistService } from '../../providers/insurelist.service';\r\nimport { Insurelist } from '../../pages/transaction-shared/insurelist';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { TabsPage } from '../tabs/tabs';\r\n\r\n@IonicPage({\r\n\r\n  segment: 'tradepanel/:invoiceId'\r\n})\r\n\r\n@Component({\r\n  selector: 'tradepanel',\r\n  templateUrl: 'tradepanel.html'\r\n})\r\n\r\n// https://angular.io/api/common/SlicePipe  Used in HTML\r\n\r\nexport class TradePanelPage implements OnInit {\r\n  policyissued :string;\r\n  insuredetail :any;\r\n  insureentry: Insurelist = new Insurelist();\r\n  \r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public navParams: NavParams,\r\n//\tpublic auth: AuthService,\r\n\tpublic insurelistservice: InsurelistService\r\n  ) {\r\n\t  \r\n\tthis.policyissued = null;\r\n\t\r\n  }\r\n  // Thanks to https://davidwalsh.name/array-sort\r\n  \r\nngOnInit() {\r\n\tthis.policyissued = null;\r\n\t var querydata = {\r\n\t\ttype : 'first',\r\n\t\tdata: { limitToFirst: 1, orderByChild: 'invoiceid',\r\n                equalTo: this.navParams.data.invoiceId  }\r\n            };\r\n\t this.insurelistservice.getInsurelistsList(querydata,\r\n         ).subscribe(data=> {\r\n\t\tthis.insuredetail = data[0];\r\n\t\t// alert(JSON.stringify(data));\r\n\t});\r\n\t\r\n/*    // equalTo: this.navParams.data.invoiceId    */\r\n\r\n\t}\r\n\t\t\r\n\tcanceloffer() {  // (2)\r\n\t\tthis.navCtrl.push(TabsPage);\r\n\t}\r\n\t\r\n  \tbuyinsurance (company, amt) {   // (1)\r\n\t  var offer = {\r\n\t\t  \r\n\t  };\r\n\t  /*\r\n\t  //this.requestid = UUID.UUID();\r\n\t  \r\n\t  this.insurelistservice.buyInsurance(offer).subscribe(data=> {\r\n\t\tthis.policyissued = data[0];\r\n\t\t// alert(JSON.stringify(this.propertydetail));\r\n\t});\r\n\t  */\r\n  }\r\n\r\n  \r\n\r\n  ionViewWillEnter() {\r\n\t  \r\n\t\r\n  }\r\n  \r\n  \r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tradepanel/tradepanel.ts","import { TradePanelPage } from './tradepanel';\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TradePanelPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(TradePanelPage),\r\n  ],\r\n  exports: [\r\n    TradePanelPage\r\n  ]\r\n})\r\n\r\nexport class TradePanelPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tradepanel/tradepanel.module.ts","import { Injectable } from '@angular/core';\r\nimport { AngularFireDatabase, FirebaseListObservable, FirebaseObjectObservable } from 'angularfire2/database';\r\nimport { Insurelist } from '../pages/transaction-shared/insurelist';\r\nimport {FireInsurelistService} from './fireinsurelist';\r\nimport {MongoInsurelistService} from './mongoinsurelist';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n\r\nimport { environment } from '../config/environment';\r\n\r\nlet storage = environment.storage.type;\r\n\r\n\r\n// Core\r\n\r\n\r\n\r\n@Injectable()\r\nexport class InsurelistService {\r\n\r\ninsurances: any;\r\n\r\n  constructor(\r\n  //private fire: FireInsurelistService,\r\n//\t\t private mongo: MongoInsurelistService \r\npublic http: Http\r\n) { \r\n\t\r\n\t  \r\n  }\r\n\r\n  load(){\r\n\r\n  \t\t//return this.http.get('assets/data/insurance.json').map(res => res.json());\r\n/*\t\tthis.http.get('assets/data/insurance.json').map(res => res.json()).subscribe(data => {\r\n\t\t\tthis.insurances = data.insurances;\r\n\t\t});\r\n*/\r\n\t}\r\n\r\n\r\n  // Return an observable list with optional query\r\n  // You will usually call this from OnInit in a component\r\n  getInsurelistsList(query = {type:'first', data:{}}): any {\r\n\t  return this.http.get('assets/data/insurance.json').map(res => res.json());\r\n\t  /*.subscribe(data => {\r\n\t\t\tthis.insurances = data.insurances;\r\n\t\t});;\r\n    /*if(query.type == 'first') {\r\n      if(storage == 'mongo')\r\n      {\r\n\t  var data = {};\r\n          return this.mongo.getInsurelistsList (data);\r\n      }\r\n      else \r\n      {\r\n           return this.fire.getInsurelistsList (query.data);\r\n      }\r\n    } else  if(query.type == 'firstbyid') {\r\n      if(storage == 'mongo')\r\n      {\r\n\t\t\tvar data = {};\r\n          return this.mongo.getInsurelistsList (data);\r\n      }\r\n      else \r\n      {\r\n           return this.fire.getInsurelistsList (query.data);\r\n      }\r\n    } */\r\n  }\r\n  \r\n  getInsurelist(key): any {\r\n\t  //return Observable.of(this.insurances[0]);\r\n\t  return this.http.get('assets/data/insurance.json').map(res => res[0].json());\r\n\t  \r\n/*      if(storage == 'mongo')\r\n      {\r\n         return this.mongo.getInsurelist (key);\r\n      }\r\n      else \r\n      {\r\n         return this.fire.getInsurelist (key);\r\n      }\r\n\t  */\r\n  }\r\n  \r\n  \r\n  createInsurelist(passeddata ): any {\r\n    if(passeddata.type == 'simple')\r\n    {\r\n      if(storage == 'mongo')\r\n      {\r\n    //     return this.mongo.createInsurelist (passeddata.data);\r\n      }\r\n      else \r\n      {\r\n      //   return this.fire.createInsurelist (passeddata.data);\r\n      }\r\n    }\r\n  }/*\r\n   updateInsurelist(key, passeddata): any {\r\n    if(passeddata.type == 'simple')\r\n    {  \r\n      if(storage == 'mongo')\r\n      {\r\n         return this.mongo.updateInsurelist (key, passeddata.data);\r\n      }\r\n      else \r\n      {\r\n         return this.fire.updateInsurelist (key, passeddata.data);\r\n      }\r\n    }\r\n  }\r\n   deleteInsurelist(key): any {\r\n      if(storage == 'mongo')\r\n      {\r\n         return this.mongo.deleteInsurelist (key);\r\n      }\r\n      else \r\n      {\r\n         return this.fire.deleteInsurelist (key);\r\n      }\r\n  }\r\n  deleteAll(): any {\r\n\t\r\n      if(storage == 'mongo')\r\n      {\r\n        return this.mongo.deleteAll ();\r\n      }\r\n      else\r\n      {\r\n        return this.fire.deleteAll ();\r\n      }\r\n  }\r\n  */\r\n\r\n  // Default error handling for all actions\r\n  private handleError(error:any) {\r\n    console.log(error)\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/insurelist.service.ts","export const environment = {\r\n    production: false,\r\n    firebaseConfig: {\r\n     apiKey: \"AIzaSyB3uqv_ZDfYd6zJhSRavhQ5IoRiaI8c-Mg\",\r\n\t\t\t\t\t\tauthDomain: \"the-deal-maker.firebaseapp.com\",\r\n\t\t\t\t\t\tdatabaseURL: \"https://the-deal-maker.firebaseio.com\",\r\n\t\t\t\t\t\tprojectId: \"the-deal-maker\",\r\n\t\t\t\t\t\tstorageBucket: \"the-deal-maker.appspot.com\",\r\n\t\t\t\t\t\tmessagingSenderId: \"60029212930\"\r\n\t\r\n    },\r\n\tupload :\r\n\t{\r\n\t\ttype: 'native'  // ngupload  . Native may not work on desktops\r\n\t\t// Standard upload https://ciphertrick.com/2016/10/24/file-upload-with-angular2-nodejs/ \r\n\t\t// Example of native upload https://www.djamware.com/post/599da16580aca768e4d2b130/how-to-upload-file-on-ionic-3-%20using-native-file-transfer-plugin\r\n\t\t// Native download https://github.com/dsgriffin/ionic-3-file-transfer-example/blob/master/src/pages/home/home.ts\r\n\t},\r\n\tpaytmtype :\r\n\t{\r\n\t\ttype:'server' // apktype\r\n\t},\r\n\tstorage: \r\n\t{\r\n\t\ttype: 'mongo'  // firebase, mongo, aws\r\n\t\t\r\n\t},\r\n\tinsurancerec: {\r\n\t\ttype:'single',  // single, daily, sizelimit, parallel\r\n\t\tsinglerec: {\r\n\t\t\"insurancelist\": 'insurancelist',\r\n\t\t\"userrec\": 'userrec',\r\n\t\t\"quoterec\": \"quotes\", // wil have quite request-id, and associated quotes\r\n\t\t\"quoterequest\": 'quoterequests',\r\n\t\t\"rating\": 'rating',\t\r\n\t\t\r\n\t\t},\r\n\t\tsizelimit: 10000,   // applicable for sizelimit, parallel\r\n\t\tparallelnumber: 4   // number of parallel\r\n\t},\r\n\tviews :{\r\n\t\tinsurancelist: {\r\n\t\t\t\r\n\t\t},\r\n\t\tinsurancedetail: {\r\n\t\t\tinvoice: true\r\n\t\t},\r\n\t\thome: {\r\n\t\t\t\r\n\t\t},\r\n\t\tuserpage :{\r\n\t\t\t\r\n\t\t},\r\n\t\ttradepanel :{  //dynamic\r\n\t\t\t\r\n\t\t},\r\n\t\tlogin: {  //dynamic\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t},\r\n\tblockchain : {\r\n\t\ttype: 'none' // multichain, hyperledger\r\n\t},\r\n\tfields : {\r\n\t\tinsuretypes: ['Small Truck', 'Cargo']\r\n\t},\r\n\tlogin: {\r\n\t\temail: true,\r\n\t\tgmail: true\r\n\t}\r\n};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/environment.ts","export class Insurelist {\r\n  $key: string;\r\n  _id: string;\r\n  consumerid:string;\r\n  validatorid:string;\r\n  invoiceid:string;\r\n  invoiceimage:string;\r\n  invoicedesc:string;\r\n  billamount: number;\r\n  insuranceamt: number;\r\n  insurepremium: number;\r\n  insureprovider: string;\r\n  premiumpaid: false;\r\n  decision: string; // pending,issued, refused, expired\r\n  paidtimeStamp: number;\r\n  gpsofconsumer: string;\r\n  blockchaintransactionid: string;\r\n  active = true;\r\n  timeStamp: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transaction-shared/insurelist.ts"],"sourceRoot":""}